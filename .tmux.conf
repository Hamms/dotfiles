# Use backtick as prefix. Makes actually _typing_ backticks a bit
# annoying, so this may be updated.
unbind C-b
set-option -g prefix `
bind ` send-prefix

# Start at 1; stupid keyboards
set -g base-index 1

# Use H and V for splits (is this overwriting anything?)
bind-key h split-window -h
bind-key v split-window -v
unbind '"'
unbind %

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# resize panes with alt-control
bind -n M-C-Left resize-pane -L 10
bind -n M-C-Right resize-pane -R 10
bind -n M-C-Up resize-pane -U 10
bind -n M-C-Down resize-pane -D 10
bind -n M-C-Space select-layout even-horizontal

# alt+number will switch to a window, creating a new one if it did not
# formerly exist
bind-key -n M-1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1'
bind-key -n M-2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2'
bind-key -n M-3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3'
bind-key -n M-4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4'
bind-key -n M-5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5'
bind-key -n M-6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6'
bind-key -n M-7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7'
bind-key -n M-8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8'
bind-key -n M-9 if-shell 'tmux select-window -t :9' '' 'new-window -t :9'
bind-key -n M-0 if-shell 'tmux select-window -t :10' '' 'new-window -t :10'

# move current pane to a different window, either creating or joining to
# that window as appropriate
bind-key -n M-! if-shell 'tmux select-window -t :1' 'join-pane -h -s :{last}' 'break-pane -t :1'
bind-key -n M-@ if-shell 'tmux select-window -t :2' 'join-pane -h -s :{last}' 'break-pane -t :2'
bind-key -n M-'#' if-shell 'tmux select-window -t :3' 'join-pane -h -s :{last}' 'break-pane -t :3'
bind-key -n M-'$' if-shell 'tmux select-window -t :4' 'join-pane -h -s :{last}' 'break-pane -t :4'
bind-key -n M-'%' if-shell 'tmux select-window -t :5' 'join-pane -h -s :{last}' 'break-pane -t :5'
bind-key -n M-'^' if-shell 'tmux select-window -t :6' 'join-pane -h -s :{last}' 'break-pane -t :6'
bind-key -n M-'&' if-shell 'tmux select-window -t :7' 'join-pane -h -s :{last}' 'break-pane -t :7'
bind-key -n M-'*' if-shell 'tmux select-window -t :8' 'join-pane -h -s :{last}' 'break-pane -t :8'
bind-key -n M-'(' if-shell 'tmux select-window -t :9' 'join-pane -h -s :{last}' 'break-pane -t :9'
bind-key -n M-')' if-shell 'tmux select-window -t :10' 'join-pane -h -s :{last}' 'break-pane -t :10'

# reload config file
bind r source-file ~/.tmux.conf

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# Paste from tmux buffer with middle click
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux paste-buffer"

# Various options I don't currently understand but may want to play with
# at some point:

# Automatically set window title
#set-window-option -g automatic-rename on
#set-option -g set-titles on

##set -g default-terminal screen-256color
#set -g status-keys vi
#set -g history-limit 10000
#
#setw -g mode-keys vi
#setw -g monitor-activity on

# THEME
set -g window-status-separator ''
set -g status-bg colour240
set -g window-status-current-bg colour242
set -g window-status-current-fg black
set -g status-fg black
set -g window-status-format ' #I '
set -g window-status-current-format ' #I '
set -g status-interval 1
set -g status-left-length 0
set -g status-left ''
set -g status-right '#[bg=magenta]#[fg=black] #(cut -d " " -f 1-3 /proc/loadavg) #[default] #[fg=black]%H:%M:%S %D #[default]'
